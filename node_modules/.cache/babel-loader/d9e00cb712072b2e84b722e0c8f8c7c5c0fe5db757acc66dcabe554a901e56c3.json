{"ast":null,"code":"var _jsxFileName = \"/Users/kumaran/Desktop/authenticator/src/timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FULL_DASH_ARRAY = 283;\nconst WARNING_THRESHOLD = 10;\nconst ALERT_THRESHOLD = 5;\nconst COLOR_CODES = {\n  info: {\n    color: \"green\"\n  },\n  warning: {\n    color: \"orange\",\n    threshold: WARNING_THRESHOLD\n  },\n  alert: {\n    color: \"red\",\n    threshold: ALERT_THRESHOLD\n  }\n};\nconst TIME_LIMIT = 20;\nconst Timer = () => {\n  _s();\n  const [timePassed, setTimePassed] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(TIME_LIMIT);\n  const [timerInterval, setTimerInterval] = useState(null);\n  const [remainingPathColor, setRemainingPathColor] = useState(COLOR_CODES.info.color);\n  useEffect(() => {\n    startTimer();\n    return () => clearInterval(timerInterval);\n  }, []);\n  const onTimesUp = () => {\n    clearInterval(timerInterval);\n  };\n  const startTimer = () => {\n    const interval = setInterval(() => {\n      setTimePassed(timePassed => timePassed + 1);\n      setTimeLeft(TIME_LIMIT - timePassed - 1);\n      setCircleDasharray();\n      setRemainingPathColor(timeLeft);\n      if (timeLeft === 0) {\n        onTimesUp();\n      }\n    }, 1000);\n    setTimerInterval(interval);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    let seconds = time % 60;\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n    return `${minutes}:${seconds}`;\n  };\n  const calculateTimeFraction = () => {\n    const rawTimeFraction = timeLeft / TIME_LIMIT;\n    return rawTimeFraction - 1 / TIME_LIMIT * (1 - rawTimeFraction);\n  };\n  const setCircleDasharray = () => {\n    const circleDasharray = `${(calculateTimeFraction() * FULL_DASH_ARRAY).toFixed(0)} 283`;\n    document.getElementById(\"base-timer-path-remaining\").setAttribute(\"stroke-dasharray\", circleDasharray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"base-timer__svg\",\n      viewBox: \"0 0 100 100\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"base-timer__circle\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"base-timer__path-elapsed\",\n          cx: \"50\",\n          cy: \"50\",\n          r: \"45\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          id: \"base-timer-path-remaining\",\n          strokeDasharray: \"283\",\n          className: `base-timer__path-remaining ${remainingPathColor}`,\n          d: \"M 50, 50 m -45, 0 a 45,45 0 1,0 90,0 a 45,45 0 1,0 -90,0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"base-timer-label\",\n      className: \"base-timer__label\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"jh4KDx0bA2l0aIkJBMXidlS5Ng0=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FULL_DASH_ARRAY","WARNING_THRESHOLD","ALERT_THRESHOLD","COLOR_CODES","info","color","warning","threshold","alert","TIME_LIMIT","Timer","_s","timePassed","setTimePassed","timeLeft","setTimeLeft","timerInterval","setTimerInterval","remainingPathColor","setRemainingPathColor","startTimer","clearInterval","onTimesUp","interval","setInterval","setCircleDasharray","formatTime","time","minutes","Math","floor","seconds","calculateTimeFraction","rawTimeFraction","circleDasharray","toFixed","document","getElementById","setAttribute","className","children","viewBox","xmlns","cx","cy","r","fileName","_jsxFileName","lineNumber","columnNumber","id","strokeDasharray","d","_c","$RefreshReg$"],"sources":["/Users/kumaran/Desktop/authenticator/src/timer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst FULL_DASH_ARRAY = 283;\nconst WARNING_THRESHOLD = 10;\nconst ALERT_THRESHOLD = 5;\n\nconst COLOR_CODES = {\n  info: {\n    color: \"green\"\n  },\n  warning: {\n    color: \"orange\",\n    threshold: WARNING_THRESHOLD\n  },\n  alert: {\n    color: \"red\",\n    threshold: ALERT_THRESHOLD\n  }\n};\n\nconst TIME_LIMIT = 20;\n\nconst Timer = () => {\n  const [timePassed, setTimePassed] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(TIME_LIMIT);\n  const [timerInterval, setTimerInterval] = useState(null);\n  const [remainingPathColor, setRemainingPathColor] = useState(COLOR_CODES.info.color);\n\n  useEffect(() => {\n    startTimer();\n    return () => clearInterval(timerInterval);\n  }, []);\n\n  const onTimesUp = () => {\n    clearInterval(timerInterval);\n  };\n\n  const startTimer = () => {\n    const interval = setInterval(() => {\n      setTimePassed(timePassed => timePassed + 1);\n      setTimeLeft(TIME_LIMIT - timePassed - 1);\n      setCircleDasharray();\n      setRemainingPathColor(timeLeft);\n\n      if (timeLeft === 0) {\n        onTimesUp();\n      }\n    }, 1000);\n    setTimerInterval(interval);\n  };\n\n  const formatTime = (time) => {\n    const minutes = Math.floor(time / 60);\n    let seconds = time % 60;\n\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    return `${minutes}:${seconds}`;\n  };\n\n  const calculateTimeFraction = () => {\n    const rawTimeFraction = timeLeft / TIME_LIMIT;\n    return rawTimeFraction - (1 / TIME_LIMIT) * (1 - rawTimeFraction);\n  };\n\n  const setCircleDasharray = () => {\n    const circleDasharray = `${(calculateTimeFraction() * FULL_DASH_ARRAY).toFixed(0)} 283`;\n    document.getElementById(\"base-timer-path-remaining\").setAttribute(\"stroke-dasharray\", circleDasharray);\n  };\n\n  return (\n    <div className=\"base-timer\">\n      <svg className=\"base-timer__svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g className=\"base-timer__circle\">\n          <circle className=\"base-timer__path-elapsed\" cx=\"50\" cy=\"50\" r=\"45\"></circle>\n          <path\n            id=\"base-timer-path-remaining\"\n            strokeDasharray=\"283\"\n            className={`base-timer__path-remaining ${remainingPathColor}`}\n            d=\"M 50, 50 m -45, 0 a 45,45 0 1,0 90,0 a 45,45 0 1,0 -90,0\"\n          ></path>\n        </g>\n      </svg>\n      <span id=\"base-timer-label\" className=\"base-timer__label\">{formatTime(timeLeft)}</span>\n    </div>\n  );\n};\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}