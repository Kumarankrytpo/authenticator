{"ast":null,"code":"var _jsxFileName = \"/Users/kumaran/Desktop/authenticator/src/timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [key, setKey] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setKey(prevKey => prevKey + 1); // Increment key to force remount\n    }, 120000); // Restart every 2 minutes (120000 milliseconds)\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-gradient\",\n      children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n        isPlaying: true,\n        duration: 600,\n        colors: [['#004777']] // Blue color\n        ,\n        size: 120,\n        strokeWidth: 10,\n        children: ({\n          remainingTime\n        }) => remainingTime\n      }, `${key}-1`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n        isPlaying: true,\n        duration: 600,\n        colors: [['#F7B801']] // Yellow color\n        ,\n        size: 100,\n        strokeWidth: 10,\n        children: ({\n          remainingTime\n        }) => remainingTime\n      }, `${key}-2`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n        isPlaying: true,\n        duration: 600,\n        colors: [['#A30000']] // Red color\n        ,\n        size: 80,\n        strokeWidth: 10,\n        children: ({\n          remainingTime\n        }) => remainingTime\n      }, `${key}-3`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"IYPkcXl41O+JlGV1m7sUxVH9Exo=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","CountdownCircleTimer","jsxDEV","_jsxDEV","Timer","_s","key","setKey","interval","setInterval","prevKey","clearInterval","className","children","isPlaying","duration","colors","size","strokeWidth","remainingTime","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kumaran/Desktop/authenticator/src/timer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nconst Timer = () => {\n  const [key, setKey] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setKey(prevKey => prevKey + 1); // Increment key to force remount\n    }, 120000); // Restart every 2 minutes (120000 milliseconds)\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"timer-wrapper\">\n      <div className=\"timer-gradient\">\n        <CountdownCircleTimer\n          key={`${key}-1`}\n          isPlaying\n          duration={600}\n          colors={[['#004777']]} // Blue color\n          size={120}\n          strokeWidth={10}\n        >\n          {({ remainingTime }) => remainingTime}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          key={`${key}-2`}\n          isPlaying\n          duration={600}\n          colors={[['#F7B801']]} // Yellow color\n          size={100}\n          strokeWidth={10}\n        >\n          {({ remainingTime }) => remainingTime}\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          key={`${key}-3`}\n          isPlaying\n          duration={600}\n          colors={[['#A30000']]} // Red color\n          size={80}\n          strokeWidth={10}\n        >\n          {({ remainingTime }) => remainingTime}\n        </CountdownCircleTimer>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,oBAAoB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEjCC,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,MAAM,CAACG,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;;IAEZ,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKS,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BV,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BV,OAAA,CAACF,oBAAoB;QAEnBa,SAAS;QACTC,QAAQ,EAAE,GAAI;QACdC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,CAAE,CAAC;QAAA;QACvBC,IAAI,EAAE,GAAI;QACVC,WAAW,EAAE,EAAG;QAAAL,QAAA,EAEfA,CAAC;UAAEM;QAAc,CAAC,KAAKA;MAAa,GAP/B,GAAEb,GAAI,IAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQK,CAAC,eACvBpB,OAAA,CAACF,oBAAoB;QAEnBa,SAAS;QACTC,QAAQ,EAAE,GAAI;QACdC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,CAAE,CAAC;QAAA;QACvBC,IAAI,EAAE,GAAI;QACVC,WAAW,EAAE,EAAG;QAAAL,QAAA,EAEfA,CAAC;UAAEM;QAAc,CAAC,KAAKA;MAAa,GAP/B,GAAEb,GAAI,IAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQK,CAAC,eACvBpB,OAAA,CAACF,oBAAoB;QAEnBa,SAAS;QACTC,QAAQ,EAAE,GAAI;QACdC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,CAAE,CAAC;QAAA;QACvBC,IAAI,EAAE,EAAG;QACTC,WAAW,EAAE,EAAG;QAAAL,QAAA,EAEfA,CAAC;UAAEM;QAAc,CAAC,KAAKA;MAAa,GAP/B,GAAEb,GAAI,IAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/CID,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAiDX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}